version: "3.8"
services:
  backend:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    image: webshop-backend:latest
    container_name: webshop-backend-container
    depends_on:
      - postgres
      - redis
    environment:
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/medusa-docker
      REDIS_URL: redis://redis
      NODE_ENV: development
      JWT_SECRET: something
      COOKIE_SECRET: something
      PORT: 9000
      MINIO_ENDPOINT: http://172.17.0.1:3000
      MINIO_BUCKET: webshop
      MINIO_ACCESS_KEY: MgreVCCFpo62lTfN
      MINIO_SECRET_KEY: hPN9IrUUMDA6nshdZwr77cbakmJKxQg6
    ports:
      - "9000:9000"
#   volumes:
#     - .:/app/medusa
#     - node_modules:/app/medusa/node_modules

  postgres:
    image: postgres:10.4
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: medusa-docker

  minio:
    image: minio/minio
    ports:
      - "3000:3000"
      - "3001:3001"
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: miniominio123
      MINIO_ROOT_PASSWORD: miniominio456
    command: server --address ":3000" --console-address ":3001" /data

  redis:
    image: redis
    expose:
      - 6379

  storefront:
    build:
      context: ./storefront
      dockerfile: Dockerfile
    image: webshop-storefront:latest
    container_name: webshop-storefront-container
    depends_on:
      - backend
    environment:
      NEXT_PUBLIC_MEDUSA_BACKEND_URL: http://172.17.0.1:9000
    ports:
      - "8000:8000"

  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile
    image: webshop-admin:latest
    container_name: webshop-admin-container
    environment:
      MEDUSA_BACKEND_URL: http://172.17.0.1:9000
    ports:
      - "7000:7000"

volumes:
  node_modules:
  minio_storage: {}